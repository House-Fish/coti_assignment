filter {
  if [log_type] == "mail" {
    # Define custom patterns for AMAVIS log components
    grok {
      pattern_definitions => {
        "AMAVIS_MESSAGEID" => "Message-ID: <%{DATA:amavis_message-id}>"
        "AMAVIS_SIZE" => "size: %{POSINT:amavis_size}"
        "AMAVIS_TESTS" => "Tests: \[%{DATA:amavis_tests}\]"
        "AMAVIS_FROM" => "From: %{DATA:amavis_header_from}"
        "AMAVIS_HITS" => "Hits: %{NUMBER:amavis_hits}"
        "AMAVIS_QUARANTINE" => "quarantine: %{NOTSPACE:amavis_quarantine}"
        "AMAVIS_SUBJECT" => "Subject: \"%{DATA:amavis_subject}\""
        "AMAVIS_KV" => "((%{AMAVIS_MESSAGEID}|%{AMAVIS_SIZE}|%{AMAVIS_TESTS}|%{AMAVIS_FROM}|%{AMAVIS_HITS}|%{AMAVIS_QUARANTINE}|%{AMAVIS_SUBJECT}|%{DATA}), )*"
      }
      
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:hostname} AMAVIS \(%{DATA:amavis_id}\) %{WORD:amavis_action} %{NOTSPACE:amavis_category}( \(%{DATA:amavis_match}\))?, \[(IPv6:)?%{IP:amavis_relay_ip}\] \[(IPv6:)?%{IP:amavis_amavis_origin_ip}\] <%{DATA:amavis_from}> -> <%{DATA:amavis_to}>, %{AMAVIS_KV}%{POSINT:amavis_elapsedtime} ms"
      }
      break_on_match => true
    }

    # Handle timestamp conversion
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }

    # Type conversions for numeric fields
    mutate {
      convert => {
        "amavis_size" => "integer"
        "amavis_hits" => "float"
        "amavis_elapsedtime" => "integer"
      }
      # Add metadata fields
      add_field => {
        "[event][dataset]" => "amavis"
        "[event][module]" => "mail"
        "[event][type]" => "virus_scan"
      }
    }

    # Clean up fields that might contain empty values
    ruby {
      code => "
        event.to_hash.each do |key, value|
          event.remove(key) if value == ''
        end
      "
    }
  }
}

output {
  if [log_type] == "mail" {
    opensearch {
        hosts => ["https://localhost:9200"]
        index => "mail-alerts-%{+YYYY.MM.dd}"
        user => "admin"
        password => "st1ong.Passw0r"
        ssl => true
        ssl_certificate_verification => false
    }
  }
}
